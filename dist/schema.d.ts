export declare const typeDefs = "#graphql\n    type Query {\n        singleUser: User\n        users: [User]\n        posts: [Post]\n        singlePost (postId: ID!): Post\n        requestedPosts: AllPostPayload\n        myPosts: AllPostPayload\n        profile: ProfileQueryPayload\n    }\n\n    type Mutation {\n        registration(\n            name: String!,\n            email: String!,\n            password: String!\n            image: String!\n        ): AuthPayload,\n        \n        login(\n            email: String!\n            password: String!\n        ): AuthPayload,\n\n        addPost(post: PostInput!): PostPayload,\n        updatePost(postId: ID!, post: PostInput!): PostPayload,\n        deletePost(postId: ID!): PostPayload,\n        publishPost(postId: ID!): PostPayload\n        updateProfile(profile: ProfileInfo!, user: UserInfo! ): ProfilePayload,\n        updateUserRole(userId:ID!, userRole: String! ): UserRolePayload,\n    }\n\n    type Post {\n        id: ID!\n        title: String!\n        image: String!\n        content: String!\n        author: User\n        createdAt: String!\n        published: String!\n        isDeleted: String!\n    }\n\n    type User {\n        id: ID!  \n        name: String!\n        email: String!\n        role: String!\n        createdAt: String!\n        profile: Profile\n        posts: [Post]\n    }\n\n\n    type Profile {\n        id: ID!\n        image: String!\n        bio: String!\n        country: String!\n        city: String!\n        number: String!      \n        createdAt: String!\n        user: User!\n    }\n\n\n    type UserRolePayload {\n       userError: String\n        result: User\n    }\n\n    type UserAndProfile {\n        user: User\n        profile: Profile\n    }\n    type AuthPayload {\n        userError: String\n        token: String\n    }\n\n    type PostPayload {\n        userError: String\n        result: Post\n    }\n    type AllPostPayload {\n        userError: String\n        result: [Post]\n    }\n    type ProfileQueryPayload {\n        userError: String\n        result: Profile\n    }\n    type ProfilePayload {\n        userError: String\n        result: UserAndProfile\n    }\n\n    input UserInfo {\n        name:String\n       \n        \n    }\n    input ProfileInfo {\n       \n        image: String\n        bio: String\n        country: String\n        city:String\n        number: String\n        \n    }\n\n    input PostInput {\n        title: String\n        content: String\n        image: String\n    }\n";
//# sourceMappingURL=schema.d.ts.map